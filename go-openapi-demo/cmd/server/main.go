package main

import (
	"log"
	"net/http"

	"github.com/go-chi/chi/v5"
	oapimw "github.com/oapi-codegen/nethttp-middleware"

	"go-openapi-demo/api"
	"go-openapi-demo/internal/handlers"
)

func main() {
	swagger, err := api.GetSwagger()
	if err != nil {
		log.Fatalf("load spec: %v", err)
	}
	// Avoid server URL checks during local dev
	swagger.Servers = nil

	r := chi.NewRouter()

	// Validate every request against the OpenAPI spec
	r.Use(oapimw.OapiRequestValidator(swagger))

	// Register routes generated by oapi-codegen and implemented by our service
	svc := handlers.NewItemsService()
	api.HandlerFromMux(svc, r)

	log.Println("listening on :8080")
	log.Fatal(http.ListenAndServe(":8080", r))
}
